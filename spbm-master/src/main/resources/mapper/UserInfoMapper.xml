<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.spbm.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.zl.spbm.entity.UserInfo">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    
    <collection property="roleList" ofType="com.zl.spbm.entity.SysRole">
    	<id column="role_id" jdbcType="INTEGER" property="roleId" />
    	<result column="available" jdbcType="BIT" property="available" />
	    <result column="description" jdbcType="VARCHAR" property="description" />
	    <result column="role" jdbcType="VARCHAR" property="role" />
    </collection>
    
  </resultMap>
  <sql id="Base_Column_List">
    uid, name, password, salt, state, username
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   <!--  select 
    <include refid="Base_Column_List" />
    from user_info -->
    SELECT 
	  u.uid,
	  u.name,
	  u.password,
	  u.salt,
	  u.state,
	  u.username,
	  r.role_id,
	  r.available,
	  r.description,
	  r.role 
	FROM
	  user_info u 
	  LEFT JOIN  sys_user_role ur ON u.uid = ur.uid 
	  LEFT JOIN sys_role r ON ur.role_id = r.role_id
    where u.uid = #{uid,jdbcType=INTEGER}
  </select>
  
  <select id="selectUserInfoByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	 SELECT 
	  u.uid,
	  u.name,
	  u.password,
	  u.salt,
	  u.state,
	  u.username,
	  r.role_id,
	  r.available,
	  r.description,
	  r.role 
	FROM
	  user_info u 
	  LEFT JOIN  sys_user_role ur ON u.uid = ur.uid 
	  LEFT JOIN sys_role r ON ur.role_id = r.role_id
  	where u.username = #{username,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zl.spbm.entity.UserInfo">
    insert into user_info (uid, name, password, 
      salt, state, username
      )
    values (#{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, #{username,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zl.spbm.entity.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.spbm.entity.UserInfo">
    update user_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.spbm.entity.UserInfo">
    update user_info
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      username = #{username,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>